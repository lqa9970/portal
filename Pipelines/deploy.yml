parameters:
- name: environment
  type: string
- name: storageAccount
  type: string
- name: serviceConnection
  type: string

stages:
- stage: Deployportal
  displayName: Deploy portal stage
  variables: 
  - group: ${{ parameters.environment }}
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: ${{ parameters.environment }}
    pool: 
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: ExtractFiles@1
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/drop-portal/$(Build.BuildId)-portal.zip'
              destinationFolder: '$(Pipeline.Workspace)/drop-portal/portalextracted'
              cleanDestinationFolder: true
              overwriteExistingFiles: false

          - task: AzureFileCopy@3
            inputs:
              SourcePath: '$(Pipeline.Workspace)/drop-portal/portalextracted/'
              azureSubscription: ${{ parameters.serviceConnection }}
              Destination: 'AzureBlob'
              storage: ${{ parameters.storageAccount }}
              ContainerName: '$web'

          - task: AzurePowerShell@5
            displayName: Get StorageAccountKey 
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              azurePowerShellVersion: LatestVersion
              ScriptType: 'InlineScript'
              Inline: |
                Write-Host '$(parameters.storageAccount) <- Storage account?'
                $value=(Get-AzStorageAccountKey -ResourceGroupName "rg-dof-dev-weu" -Name $(parameters.storageAccount))[0].Value
                Write-Host "##vso[task.setvariable variable=storageAccountKey;]$value"
              pwsh: true

          - task: AzurePowerShell@5
            displayName: Set ContentTypes
            env:
              STORAGE_KEY: '$(storageAccountKey)'
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              ScriptType: 'FilePath'
              ScriptPath: '$(Pipeline.Workspace)/drop-portal-ps/contentTypes.ps1'              
              azurePowerShellVersion: 'LatestVersion'